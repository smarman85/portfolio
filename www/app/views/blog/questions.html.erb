<section class="blog_content">

   <h2>Asking Better Questions</h2>
   <span class="date_posted">Posted On: 11.12.14</span>

  <article>

       <p>
           To a new developer, asking questions on sites like stack overflow can seem a bit daunting. The first time I asked a question on stack overflow, I was kind of excited to start tapping into such a valuable resource, but I did not get the reception I was expecting. My first post was down voted twice, edited and not even answered. At the time I was new to developing and asked a very basic question so I was trying to be as brief as possible so I cut a few corners and didn’t really form my question well.
       </p>

       <p>
           After that experience, I have tried my best to follow the stack overflow guidelines for ‘How to ask good questions?’ All the suggestions really make a lot of sense. The biggest take away, for me, proof reading your posts. These questions are going out to busy people all over the planet, who are going to be doing you a huge favor. In an effort to be courteous to them, make sure your post is well written (unlike this blog) and concisely illustrates the issue. Doing so will hopefully prevent any clarification issues.
       </p>

       <p>
           It is also important to include all relative tags to the language, language version, and library you are using. Without these it could be impossible to really figure out the problem in your code. After adding your languages, you may be tempted to post all of your code, which should be avoided at all costs. You need to find the delicate balance between too much and not enough. Too much code and you may frustrate your reader, too little and you may not give them enough to answer your question. A good practice is to make a new example and see if you can get the same results with the same bit of code the problem is stemming from.
       </p>

       <p>
           When the blog and the catchy yet informative title is written and proofread do not just close the browser and wait to check back. It can be very surprising how fast your questions can get feedback or even answered. Keep the window open and make sure you respond if anyone needs clarification or has any questions about your code. I hope this helps you to avoid getting down voted in the future.
       </p>
    </article>
</section>